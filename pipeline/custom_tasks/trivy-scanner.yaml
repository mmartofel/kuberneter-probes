apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    openshift.io/installed-from: tektonhub
    tekton.dev/categories: Security
    tekton.dev/displayName: trivy scanner
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/platforms: linux/amd64
    tekton.dev/tags: 'CLI, trivy'
  name: trivy-scanner
  labels:
    app.kubernetes.io/version: '0.2'
spec:
  description: >-
    Trivy is a simple and comprehensive scanner for vulnerabilities in container
    images,file systems ,and Git repositories, as well as for configuration
    issues.

    This task can be used to scan for vulnenrabilities on the source code in
    stand alone mode.
  params:
    - name: ARGS
      description: The Arguments to be passed to Trivy command.
      type: array
    - name: TRIVY_IMAGE
      description: Trivy scanner image to be used
      type: string
      default: "docker.io/aquasec/trivy:0.42.1"
    - name: IMAGE_PATH
      description: Image or Path to be scanned by trivy.
      type: string
      default: 'false'
    - name: AIR_GAPPED_ENABLED
      description: a flag enabling Air-Gapped mode
      type: string
      default: "false"
  steps:
    - args:
        - $(params.ARGS)
      image: $(params.TRIVY_IMAGE)
      name: trivy-scan
      resources: {}
      script: |
        #!/usr/bin/env sh
          cmd="trivy $* "
          if [ "$(params.AIR_GAPPED_ENABLED)" = "true" ]; then
            echo "Air-Gapped mode enabled"
            TRIVY_TEMP_DIR=$(mktemp -d)
            trivy --cache-dir $TRIVY_TEMP_DIR image --download-db-only
            tar -cf ./db.tar.gz -C $TRIVY_TEMP_DIR/db metadata.json trivy.db
            rm -rf $TRIVY_TEMP_DIR
            mkdir -p $HOME/.cache/trivy/db
            tar xvf ./db.tar.gz -C $HOME/.cache/trivy/db
            cmd+="--skip-update "
          fi
          cmd=$cmd" $(params.IMAGE_PATH)"
          echo "Running trivy task with command below"
          echo "$cmd"
          echo "Trivy image used - $(params.TRIVY_IMAGE)"
          eval "trivy --version"
          eval "$cmd"
      workingDir: $(workspaces.manifest-dir.path)
  workspaces:
    - name: manifest-dir
